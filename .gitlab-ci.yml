variables:
  APPNAME: "landmaps-thailand"
  HARBOR_PROJECT_PATH: "thaibev-ai"
  HARBOR_ROBOT_FILE: "robot#thaibev-ai+thaibev-ai.json"
  DEV_TAG: "v0.0.${CI_PIPELINE_IID}-stg"
  UAT_TAG: "v0.0.${CI_PIPELINE_IID}-uat"
  PROD_TAG: "v0.0.${CI_PIPELINE_IID}-prod"

stages:
  - build_base
  - publish_dev
  - publish_uat
  - publish_prod
  - code-analyze
  - trigger

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

include:
  - local: .gitlab-ci/code-review.yml

base_app:
  stage: build_base
  image: docker:cli
  services:
    - name: docker:dind
      command: ["--insecure-registry=registryii.thaibevapp.com"]
  script:
    - pwd
    - ls -la
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/dev/base-frontend:base || true
    - docker build --network=host --pull --compress -t $CI_REGISTRY_IMAGE/dev/base-frontend:base -f base.Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/dev/base-frontend:base
    - docker tag  $CI_REGISTRY_IMAGE/dev/base-frontend:base $CI_REGISTRY_IMAGE/dev/base-frontend:latest
    - docker push $CI_REGISTRY_IMAGE/dev/base-frontend:latest
    - docker logout
  only:
    refs:
      - dev
      - uat
      - master
    changes:
      - package.json
      - bun.lockb
      - base.Dockerfile

publish_dev:
  stage: publish_dev
  image: docker:latest
  services:
    - name: docker:dind
      command: ["--insecure-registry=registryii.thaibevapp.com"]
  before_script:
    - apk add --no-cache jq curl docker
  script:
    - docker login $HARBOR_URL -u $HARBOR_USER -p $HARBOR_SECRET
    - docker build -t $HARBOR_URL/$HARBOR_PROJECT_PATH/$APPNAME:$DEV_TAG .
    - docker push $HARBOR_URL/$HARBOR_PROJECT_PATH/$APPNAME:$DEV_TAG
    - echo "VERSION_IMAGE_TAG=$DEV_TAG" >> .env.staging
    - echo "ENVIRONMENT_STAGE=dev" >> .env.staging
  artifacts:
    reports:
      dotenv: .env.staging
  # only:
  #   - dev

publish_uat:
  stage: publish_uat
  image: docker:latest
  services:
    - name: docker:dind
      command: ["--insecure-registry=registryii.thaibevapp.com"]
  before_script:
    - apk add --no-cache jq curl docker
  script:
    - docker login $HARBOR_URL -u $HARBOR_USER -p $HARBOR_SECRET
    - docker pull $HARBOR_URL/$HARBOR_PROJECT_PATH/$APPNAME:$DEV_TAG
    - docker tag $HARBOR_URL/$HARBOR_PROJECT_PATH/$APPNAME:$DEV_TAG $HARBOR_URL/$HARBOR_PROJECT_PATH/$APPNAME:$UAT_TAG
    - docker push $HARBOR_URL/$HARBOR_PROJECT_PATH/$APPNAME:$UAT_TAG
    - echo "VERSION_IMAGE_TAG=$UAT_TAG" >> .env.uat
    - echo "ENVIRONMENT_STAGE=uat" >> .env.uat
  artifacts:
    reports:
      dotenv: .env.uat
  when: on_success
  allow_failure: false
  dependencies:
    - publish_dev
  only:
    - uat

publish_prod:
  stage: publish_prod
  image: docker:latest
  services:
    - name: docker:dind
      command: ["--insecure-registry=registryii.thaibevapp.com"]
  before_script:
    - apk add --no-cache jq curl docker
  script:
    - docker login $HARBOR_URL -u $HARBOR_USER -p $HARBOR_SECRET
    - docker pull $HARBOR_URL/$HARBOR_PROJECT_PATH/$APPNAME:$DEV_TAG
    - docker tag $HARBOR_URL/$HARBOR_PROJECT_PATH/$APPNAME:$DEV_TAG $HARBOR_URL/$HARBOR_PROJECT_PATH/$APPNAME:$PROD_TAG
    - docker push $HARBOR_URL/$HARBOR_PROJECT_PATH/$APPNAME:$PROD_TAG
    - echo "VERSION_IMAGE_TAG=$PROD_TAG" >> .env.prod
    - echo "ENVIRONMENT_STAGE=prod" >> .env.prod
  artifacts:
    reports:
      dotenv: .env.prod
  when: on_success
  allow_failure: false
  dependencies:
    - publish_dev
  only:
    - master

trigger_app:
  stage: trigger
  variables:
    UPSTREAM_ENVIRONMENT_STAGE: $ENVIRONMENT_STAGE
    UPSTREAM_IMAGE_TAG: $VERSION_IMAGE_TAG
    UPSTREAM_GITLAB_ACCESS_TOKEN: $GITLAB_ACCESS_TOKEN
    UPSTREAM_APPNAME: $APPNAME
  trigger:
    project: thaibev-ai/gitops
    strategy: depend
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "uat" || $CI_COMMIT_BRANCH == "master"'
      when: on_success
